// Partial file for storing helper functions used in mixins and source stylesheets

/// I grabbed this useful utility from the following site(s) as it did
/// just what I needed to help me scale the unit values in the scale-unit-value() mixin
///
/// https://css-tricks.com/snippets/sass/strip-unit-function/
/// https://github.com/sass/sass/issues/533
///
/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

// Convert a percentage number to the decimal equivalent
// For example, 50 would correspond to 0.5
@function convert-percentage($number) {
	@return ($number / 100)
}

// Since the sass built-in function, round(), only rounds to the nearest
// whole number, I created the following function to round to a selected
// number of decimal point
// Function accepts the following inpus
// {$number} - Number to be rounded
// {$num-decimal-points} - Number of decimal points to round to
@function round-decimal($number, $num-decimal-places) {
	$output: 1;
	@for $i from 1 through $num-decimal-places {
		$output: $output * 10;
	}
	// Using Sass built-in function, round()
	@return round($number*$output) / $output;
}

// Scale a unit number by $scale-value, rounding to $num-decimal-places
// This function first removes the unit, scales it by $scale-value, which is the percentage number without
// the %, rounds to the desired number of decimal places, and then adds the unit back.
// Using Sass built-in functions, unquote() and unit().
@function scale-unit-value($value-to-be-scaled, $scale-value, $num-decimal-places) {
	@return unquote(round-decimal(strip-unit($value-to-be-scaled) * convert-percentage($scale-value), $num-decimal-places) + unit($value-to-be-scaled))
}